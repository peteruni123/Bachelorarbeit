{"ast":null,"code":"import _slicedToArray from \"C:/Users/ploeffler/Bachelorbereich/React-App/client/data-visu/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"C:/Users/ploeffler/Bachelorbereich/React-App/client/data-visu/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { stack as d3Stack } from 'd3-shape';\nimport { getStackingGroups } from '../internals/stackSeries';\nimport defaultizeValueFormatter from '../internals/defaultizeValueFormatter';\n// For now it's a copy past of bar charts formatter, but maybe will diverge later\nvar formatter = function formatter(params, dataset) {\n  var seriesOrder = params.seriesOrder,\n    series = params.series;\n  var stackingGroups = getStackingGroups(params);\n\n  // Create a data set with format adapted to d3\n  var d3Dataset = dataset != null ? dataset : [];\n  seriesOrder.forEach(function (id) {\n    var data = series[id].data;\n    if (data !== undefined) {\n      data.forEach(function (value, index) {\n        if (d3Dataset.length <= index) {\n          d3Dataset.push(_defineProperty({}, id, value));\n        } else {\n          d3Dataset[index][id] = value;\n        }\n      });\n    } else if (dataset === undefined && process.env.NODE_ENV !== 'production') {\n      throw new Error([\"MUI: line series with id='\".concat(id, \"' has no data.\"), 'Either provide a data property to the series or use the dataset prop.'].join('\\n'));\n    }\n  });\n  var completedSeries = {};\n  stackingGroups.forEach(function (stackingGroup) {\n    // Get stacked values, and derive the domain\n    var ids = stackingGroup.ids,\n      stackingOrder = stackingGroup.stackingOrder,\n      stackingOffset = stackingGroup.stackingOffset;\n    var stackedSeries = d3Stack().keys(ids.map(function (id) {\n      // Use dataKey if needed and available\n      var dataKey = series[id].dataKey;\n      return series[id].data === undefined && dataKey !== undefined ? dataKey : id;\n    })).value(function (d, key) {\n      var _d$key;\n      return (_d$key = d[key]) != null ? _d$key : 0;\n    }) // defaultize null value to 0\n    .order(stackingOrder).offset(stackingOffset)(d3Dataset);\n    ids.forEach(function (id, index) {\n      var dataKey = series[id].dataKey;\n      completedSeries[id] = _extends({}, series[id], {\n        data: dataKey ? dataset.map(function (d) {\n          return d[dataKey];\n        }) : series[id].data,\n        stackedData: stackedSeries[index].map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n            a = _ref2[0],\n            b = _ref2[1];\n          return [a, b];\n        })\n      });\n    });\n  });\n  return {\n    seriesOrder: seriesOrder,\n    stackingGroups: stackingGroups,\n    series: defaultizeValueFormatter(completedSeries, function (v) {\n      return v == null ? void 0 : v.toLocaleString();\n    })\n  };\n};\nexport default formatter;","map":{"version":3,"names":["_extends","stack","d3Stack","getStackingGroups","defaultizeValueFormatter","formatter","params","dataset","seriesOrder","series","stackingGroups","d3Dataset","forEach","id","data","undefined","value","index","length","push","_defineProperty","process","env","NODE_ENV","Error","concat","join","completedSeries","stackingGroup","ids","stackingOrder","stackingOffset","stackedSeries","keys","map","dataKey","d","key","_d$key","order","offset","stackedData","_ref","_ref2","_slicedToArray","a","b","v","toLocaleString"],"sources":["C:/Users/ploeffler/Bachelorbereich/React-App/client/data-visu/node_modules/@mui/x-charts/esm/LineChart/formatter.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { stack as d3Stack } from 'd3-shape';\nimport { getStackingGroups } from '../internals/stackSeries';\nimport defaultizeValueFormatter from '../internals/defaultizeValueFormatter';\n// For now it's a copy past of bar charts formatter, but maybe will diverge later\nconst formatter = (params, dataset) => {\n  const {\n    seriesOrder,\n    series\n  } = params;\n  const stackingGroups = getStackingGroups(params);\n\n  // Create a data set with format adapted to d3\n  const d3Dataset = dataset != null ? dataset : [];\n  seriesOrder.forEach(id => {\n    const data = series[id].data;\n    if (data !== undefined) {\n      data.forEach((value, index) => {\n        if (d3Dataset.length <= index) {\n          d3Dataset.push({\n            [id]: value\n          });\n        } else {\n          d3Dataset[index][id] = value;\n        }\n      });\n    } else if (dataset === undefined && process.env.NODE_ENV !== 'production') {\n      throw new Error([`MUI: line series with id='${id}' has no data.`, 'Either provide a data property to the series or use the dataset prop.'].join('\\n'));\n    }\n  });\n  const completedSeries = {};\n  stackingGroups.forEach(stackingGroup => {\n    // Get stacked values, and derive the domain\n    const {\n      ids,\n      stackingOrder,\n      stackingOffset\n    } = stackingGroup;\n    const stackedSeries = d3Stack().keys(ids.map(id => {\n      // Use dataKey if needed and available\n      const dataKey = series[id].dataKey;\n      return series[id].data === undefined && dataKey !== undefined ? dataKey : id;\n    })).value((d, key) => {\n      var _d$key;\n      return (_d$key = d[key]) != null ? _d$key : 0;\n    }) // defaultize null value to 0\n    .order(stackingOrder).offset(stackingOffset)(d3Dataset);\n    ids.forEach((id, index) => {\n      const dataKey = series[id].dataKey;\n      completedSeries[id] = _extends({}, series[id], {\n        data: dataKey ? dataset.map(d => d[dataKey]) : series[id].data,\n        stackedData: stackedSeries[index].map(([a, b]) => [a, b])\n      });\n    });\n  });\n  return {\n    seriesOrder,\n    stackingGroups,\n    series: defaultizeValueFormatter(completedSeries, v => v == null ? void 0 : v.toLocaleString())\n  };\n};\nexport default formatter;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}